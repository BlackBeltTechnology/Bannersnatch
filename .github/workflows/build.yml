name: java CI with maven

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  build:
    runs-on: judong
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
        
      - name: Project context
        id: context
        uses: zero88/gh-project-context@v1.1

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET_KEYS }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
          gpg-private-key: ${{ secrets.GPG_SECRET_KEYS }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Calculate version number
        id: version
        run: |-
          TAG_NAME=$(echo "${{ steps.context.outputs.branch }}" | cut -d ' ' -f2 | tr '#\/\.-' '_')
          BASE_VERSION=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dtycho.mode=maven -DskipModules=true -Dexpression=project.version -q -DforceStdout | cut -d'-' -f 1)
          VERSION_NUMBER=${BASE_VERSION}.$(date +%Y%m%d_%H%M%S)_${{ steps.context.outputs.shortCommitId }}_${TAG_NAME//[(\)]}
          echo "Base version from POM: $BASE_VERSION"
          echo "Building version: ${VERSION_NUMBER}"
          echo "::set-output name=version::${VERSION_NUMBER}"

      - name: List GPG keys
        run: gpg --list-keys

      - name: Grep config
        run: gpg --version

      - name: Remove settings.xml
        run: rm $HOME/.m2/settings.xml || true
          
      - name: Setup maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                },
                {
                    "id": "judong-nexus-distribution",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                }
            ]

          mirrors: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "mirrorOf": "*",
                    "url": "https://nexus.judo.technology/repository/maven-judong/"
                 }
            ]


      - name: Print settings.xml
        run: cat $HOME/.m2/settings.xml

      - name: List GPG keys
        run: gpg --list-keys

#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2-

#      - name: Set project version
#        run: |-
#          ./mvnw -B -Dstyle.color=always \
#          -DnewVersion=${{ steps.version.outputs.version }} \
#          -DgenerateBackupPoms=false \
#          -Dtycho.mode=maven \
#          versions:set
#
#      - name: Update target definition
#        run: |-
#          ./mvnw -B -Dstyle.color=always \
#          -Dtycho.mode=maven  \
#          -P update-target-versions \
#          -f ./targetdefinition/pom.xml \
#          validate
#
#      - name: Update category
#        run: |-
#         ./mvnw -B -Dstyle.color=always \
#          -Dtycho.mode=maven \
#          -P update-category-versions \
#          -f ./site/pom.xml \
#          validate
#
#      - name: Set tycho version
#        run: |-
#          ./mvnw -B -Dstyle.color=always \
#          -Dtycho.mode=maven  \
#          -P update-category-versions \
#          tycho-versions:update-eclipse-metadata
#
      - name: Build with Maven
        run: |-
          ./mvnw -B -Dstyle.color=always \
          -Drevision=${{ steps.version.outputs.version }} \
          -Psign-artifacts,release-judong \
          deploy

      - name: Sonar Metrics
        if: steps.context.outputs.branch == 'develop'
        continue-on-error: true
        run: |-
          ./mvnw -B -Dstyle.color=always \
          -Dsonar.projectKey=judo-tatami-core \
          -Dsonar.host.url=https://sonar.judo.technology \
          -Dsonar.login=${{ secrets.JUDO_SONAR_TOKEN }} \
          sonar:sonar

#      - name: Release P2
#        run: |-
#          ./mvnw -B -Dstyle.color=always \
#          -Dtycho.mode=maven \
#          -Prelease-dummy,release-p2-judong \
#          -DdeployOnly \
#          -DskipTests=true \
#          -DskipModules=true \
#          deploy

      - name: Create success message
        if: ${{ !failure() && !cancelled() }}
        run: |-
          echo ":check_mark_button: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" > build.msg
          echo "Version: ${{ steps.version.outputs.version }}" >> build.msg
          echo "Commit: ${{ steps.context.outputs.commitMsg }}" >> build.msg

      - name: Create faliure message
        if: ${{ failure() }}
        run: |-
          echo ":cross_mark: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" > build.msg
          echo "Commit: ${{ steps.context.outputs.commitMsg }}" >> build.msg

      - name: Create canceled message
        if: ${{ cancelled() }}
        run: |-
          echo ":warning: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" > build.msg
          echo "Commit: ${{ steps.context.outputs.commitMsg }}" >> build.msg

      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.version.outputs.version }}

      - name: Send message to skype
        uses: Eloco/docker-action-send-skype@v2
        if: always()
        with:
          skype_username: ${{ secrets.SKYPE_USERNAME }}
          skype_password: ${{ secrets.SKYPE_PASSWORD }}
          skype_ids: 19:0503749da2e44ed9910046678012bdf7@thread.skype
          send_msg_path: build.msg

      